description = "Contains some helpful classes for test ox."

// Dependencies of the project
dependencies {

  implementation (
    // module dependencies
    project(':pso-ox-core'),
    project(':pso-ox-berlioz'),
    "org.pageseeder.berlioz:pso-berlioz:$psoBerliozVersion",
    "org.pageseeder.xmlwriter:pso-xmlwriter:$psoXMLWriterVersion",
    "org.slf4j:slf4j-api:$slf4jAPIVersion",
    "junit:junit:$junitVersion",
    "org.hamcrest:java-hamcrest:$javaHamcrestVersion",
    "org.hamcrest:hamcrest-junit:$hamcrestJUnitVersion",
    "org.xmlunit:xmlunit-core:$xmlUnitCoreVersion",
    "org.xmlunit:xmlunit-matchers:$xmlUnitMatchersVersion",
    "org.mockito:mockito-all:$mockitoAllVersion",
    "org.powermock:powermock-mockito-release-full:$powermockMockitoReleaseFullVersion",
  )

  compileOnly (
    "org.eclipse.jdt:org.eclipse.jdt.annotation:$eclipseJDTAnnotationVesion",
    "javax.servlet:javax.servlet-api:$javaxServletApiVersion"
  )

  runtimeOnly (
    //"topologi:topologi-xerces:$topologiXercesVersion",
    "net.sf.saxon:Saxon-HE:${saxonVersion}",
    "ch.qos.logback:logback-core:$logbackVersion",
    "ch.qos.logback:logback-classic:$logbackVersion"
  )

  testImplementation (
    project(':pso-ox-psml'),
    project(':pso-ox-schematron'),
    "org.eclipse.jdt:org.eclipse.jdt.annotation:$eclipseJDTAnnotationVesion",
    "javax.servlet:javax.servlet-api:$javaxServletApiVersion",
  )

}
